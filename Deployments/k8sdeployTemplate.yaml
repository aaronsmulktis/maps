pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  batch: true
  branches:
    include: 
    - refs/heads/*
  paths:
    include: 
    - /

variables:
  projectName: MarketMap.UI
  registryName: sndboxregistry
  registryServerName: '$(registryName).azurecr.io'
  imageName: '$(projectName)'
  environment: 'DEV'
  # define 3 more variables: registryName, registryLogin and registryPassword in the build pipeline in UI

steps:
- task: helmtasks@1
  displayName: 'Helm Setup Tasks'
  inputs:
    setK8sClusterVars: true
    environment: 'DEV'
    clusterName: 'eng0'
    setHelmChartVars: true
    chartPath: 'Deployments/carvana-edge-MarketMap.UI'
#steps:
#- bash: docker build -f $(system.defaultWorkingDirectory)/$(projectName)/Dockerfile -t $(registryServerName)/$(imageName):$(build.buildId) $(system.defaultWorkingDirectory)/$(projectName)
#  displayName: 'docker build'

#- bash: |
#    docker login $(registryServerName) -u $(registryLogin) -p $(registryPassword)
#    docker push $(registryServerName)/$(imageName):$(build.buildId)
#  displayName: 'docker push'
#  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))

- task: HelmInstaller@0
  displayName: 'Install Helm'
  inputs:
    helmVersion: 2.14.1

- task: Docker@2
  displayName: buildAndPush
  inputs:
    containerRegistry: '$(registryName)'
    repository: '$(CHART_NAME)'
    command: 'buildAndPush'
    Dockerfile: 'MarketMap.UI/Dockerfile'
    tags: |
      latest
      $(CHART_VERSION)-$(environment)
  enabled: true

- task: HelmDeploy@0
  displayName: 'Helm Deploy HarmanjitTestClusterWestNew'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'SandboxK8sConn'
    azureResourceGroup: 'HarmanjitTestRG'
    kubernetesCluster: 'HarmanjitTestClusterWestNew'
    namespace: 'edge'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(CHART_PATH)'
    releaseName: '$(CHART_NAME)'
    overrideValues: 'host=sandbox.carvana.io'
    valueFile: '$(CHART_PATH)/values-sandbox.yaml'


#- bash: helm package --version $(build.buildId) --destination $(build.artifactStagingDirectory) $(system.defaultWorkingDirectory)/$(projectName)/charts/$(projectName)
#  displayName: 'helm package'

#- bash: az acr helm push -n $(registryName) -u $(registryLogin) -p $(registryPassword) $(build.artifactStagingDirectory)/$(projectName)-$(build.buildId).tgz
#  displayName: 'az acr helm push'
#  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))

